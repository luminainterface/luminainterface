version: '3.8'

services:
  concept-dictionary:
    build:
      context: ../../
      dockerfile: services/concept-dictionary/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - CONCEPT_DICT_API_KEY=${GRAPH_API_KEY:-changeme}
      - REDIS_URL=redis://:02211998@redis:6379
      - PORT=8000
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  crawler:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8400:8400"
    environment:
      - REDIS_URL=redis://:02211998@redis:6379
      - QDRANT_URL=http://qdrant:6333
      - GRAPH_API_URL=http://graph-api:8200
      - CONCEPT_DICT_URL=http://concept-dictionary:8000
      - GRAPH_API_KEY=${GRAPH_API_KEY:-changeme}
      - TRAINING_DATA_PATH=/app/training_data
      - EMBEDDING_MODEL=nomic-embed-text
      - PROCESS_INTERVAL=3600  # Process training data every hour
    volumes:
      - ../training_data:/app/training_data
    depends_on:
      concept-dictionary:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8400/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass 02211998
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "02211998", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:6333/healthz || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3

  graph-api:
    image: neo4j:4.4
    ports:
      - "8200:8200"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
    volumes:
      - neo4j_data:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200/health"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  redis_data:
  qdrant_data:
  neo4j_data:

networks:
  backend:
    external: true
    name: lumina-system_backend
  default:
    name: crawler_network
    driver: bridge 